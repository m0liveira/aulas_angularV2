body {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
  padding: 0 15%;
  background: #222;
}

/* input{
  margin-top: 100px;
} */

.box {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-evenly;
  border-radius: 3rem;
  box-shadow: -2px -2px 10px 0 #006eff, 2px 2px 10px 0 #ff0000;
  width: 100%;
  height: 90%;
}

.box:nth-last-of-type(1) {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-evenly;
  border-radius: 3rem;
  box-shadow: -2px -2px 10px 0 #006eff, 2px 2px 10px 0 #ff0000;
  width: 100%;
  height: 90%;
}

.box h1 {
  color: #222;
  font-size: 3vw;
  text-align: center;
  text-shadow: -2px -2px 0 #ff6, 2px -2px 0 #ff6, -2px 2px 0 #ff6,
    2px 2px 0 #ff6;
  width: 100%;
  height: 10%;
}

.box .img-container {
  position: relative;
  border-radius: 3rem;
  width: 35%;
  height: 50%;
  transition: box-shadow 350ms ease-in-out;
}

.box .img-container::before {
  content: "Republic";
  position: absolute;
  top: -25%;
  color: #222;
  text-shadow: -2px -2px 2px #006eff, 2px 2px 2px #006eff;
  font-size: 2.5vw;
  font-family: var(--acme);
  font-weight: 400;
  font-variant: small-caps;
  letter-spacing: 0.2rem;
  text-align: center;
  width: 100%;
  cursor: pointer;
}

.box .img-container:nth-last-child(1):before {
  content: "Sith";
  text-shadow: -2px -2px 2px #ff0000, 2px 2px 2px #ff0000;
}

.box .img-container:hover {
  box-shadow: 0 0 25px 0 rgba(0, 110, 255, 0.5);
  transition: all 350ms ease-in-out;
}

.box .img-container:nth-last-child(1):hover {
  box-shadow: 0 0 25px 0 rgba(255, 0, 0, 0.5);
}

.box .img-container img {
  width: 100%;
  height: 100%;
  object-fit: fill;
  cursor: pointer;
}

.container{
  width: 100%;
  height: 15%;
}

/* lightsaber */

/* lightsaber box */
.lightsaber {
  position: relative;
}

/* checkbox */
#light {
  position: absolute;
  width: 0;
  height: 0;
  opacity: 0;
  cursor: pointer;
}

/* pega */
.hilt {
  display: block;
  background: silver;
  background-image: linear-gradient(
    silver 0 6%,
    #df9c20 0 10%,
    silver 0 14%,
    black 0 20%,
    silver 0 22%,
    black 0 24%,
    silver 0 26%,
    black 0 28%,
    silver 0 30%,
    black 0 32%,
    silver 0 34%,
    black 0 36%,
    silver 0 38%,
    black 0 40%,
    silver 0 42%,
    black 0 44%,
    silver 0 55%,
    #df9c20 3.75rem 75%,
    silver 0 100%
  );
  border-radius: 0 0 0.4rem 0.4rem;
  width: 1vw;
  height: 13vh;
  cursor: pointer;
}

/* lamina */
.blade {
  position: absolute;
  top: -250%;
  background: white;
  border-radius: 100vw 100vw 0 0;
  box-shadow: inset 0 0 4px hsl(0, 100%, 50%), 0 0 1rem hsla(0, 100%, 50%, 0.8),
    0 0 1.5rem hsla(0, 100%, 50%, 0.7), 0 0 2rem hsla(0, 100%, 50%, 0.5),
    0 0 3rem hsla(0, 100%, 50%, 0.3), 0 0 5rem hsla(0, 100%, 50%, 0.2);
  height: 250%;
  width: 100%;
  transition: transform 150ms ease-out;
  transform-origin: bottom;
}

/* pulsar */

.blade::before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  background: white;
  border-radius: inherit;
  opacity: 0.7;
  z-index: 2;
}

.blade::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background: hsl(0, 100%, 50%);
  border-radius: inherit;
  filter: blur(0.5rem);
  opacity: 1;
  animation: pulse linear 5s infinite;
}

/* pulse animation */
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}

/* ligar e desligar lightsaber */
#light:checked + .blade {
  transform: scaleY(1);
}

#light:not(:checked) + .blade {
  transform: scaleY(0);
}

/* defend animation */
.defend {
  -webkit-animation: defend 10s infinite alternate;
  animation: defend 10s infinite alternate;
}

@keyframes defend {
  from {
    transform: rotate(0) translate(0, 0);
  }
  20% {
    transform: rotate(7200deg);
  }
  40% {
    transform: rotate(0) translate(-800%, 0);
  }
  50% {
    transform: rotate(-1800deg);
  }
  60% {
    transform: rotate(0) translateX(1000%);
  }
  70% {
    transform: rotate(7200deg);
  }
  80% {
    transform: rotate(360deg);
  }
  90% {
    transform: rotate(-180deg);
  }
  to {
    transform: rotate(0) translate(0, 0);
  }
}
